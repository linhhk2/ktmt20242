// defines.v
// Opcodes from the reference card 
`define OPCODE_LUI    7'b0110111
`define OPCODE_AUIPC  7'b0010111
`define OPCODE_JAL    7'b1101111
`define OPCODE_JALR   7'b1100111
`define OPCODE_B      7'b1100011
`define OPCODE_LOAD   7'b0000011
`define OPCODE_S      7'b0100011
`define OPCODE_I_ARITH 7'b0010011
`define OPCODE_R      7'b0110011
`define OPCODE_FENCE  7'b0001111
`define OPCODE_SYSTEM 7'b1110011

// Funct3 for various instruction types 
`define FUNCT3_ADDI   3'b000
`define FUNCT3_ADD_SUB 3'b000
`define FUNCT3_SW     3'b010
`define FUNCT3_LW     3'b010
`define FUNCT3_BEQ    3'b000
`define FUNCT3_BNE    3'b001
// ... (add other funct3 as needed)

// Funct7 for R-Type [cite: 1]
`define FUNCT7_ADD    7'b0000000
`define FUNCT7_SUB    7'b0100000

// ALU Operations (internal encoding)
`define ALU_ADD     4'b0000
`define ALU_SUB     4'b0001
`define ALU_SLL     4'b0010
`define ALU_SLT     4'b0011
`define ALU_SLTU    4'b0100
`define ALU_XOR     4'b0101
`define ALU_SRL     4'b0110
`define ALU_SRA     4'b0111
`define ALU_OR      4'b1000
`define ALU_AND     4'b1001
`define ALU_COPY_B  4'b1010 // For LUI